# Check whether the binary tree is complete or not

class Node:
    """A class representing a node in a binary tree."""
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None


def isCompleteBT(root):
    """Checks if a binary tree is a complete binary tree."""
    if root is None:
        return True

    queue = []
    flag = False
    queue.append(root)

    while len(queue) > 0:
        tempNode = queue.pop(0)

        # Check left child
        if tempNode.left:
            if flag:
                return False
            queue.append(tempNode.left)
        else:
            flag = True

        # Check right child
        if tempNode.right:
            if flag:
                return False
            queue.append(tempNode.right)
        else:
            flag = True

    return True


# Example binary tree
root = Node(1)
root.left = Node(2)
root.right = Node(3)
root.left.left = Node(4)
root.left.right = Node(5)
root.right.left = Node(6)
root.right.right = Node(7)

# Check if the binary tree is complete
if isCompleteBT(root):
    print("Complete Binary Tree")
else:
    print("NOT Complete Binary Tree")
